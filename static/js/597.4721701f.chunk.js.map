{"version":3,"file":"static/js/597.4721701f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","constants/constants.js","components/Icons/AddContactIcon.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","redux/modal/modalSelectors.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactEditorModal/ContactEditorModal.jsx","components/Icons/DeleteIcon.jsx","components/Icons/EditIcon.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/PhonebookSection/PhonebookSection.jsx","pages/Contacts/Contacts.jsx","pages/Home/Home.styled.js"],"sourcesContent":["// import styled from '@emotion/styled';\nimport styled from 'styled-components';\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  background-color: pink;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  height: 35px;\n  width: 200px;\n\n  border-radius: 8px;\n  ${'' /* background-color: #45f5e6; */}\n  border: none;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: violet;\n    transform: scale(1.1);\n  }\n`;\n","import { object, string } from 'yup';\n\nexport const NAME_MATCH =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nexport const nameError =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const nameNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nexport const requiredError = 'This field is required';\nexport const SignupSchema = object().shape({\n  name: string().required(requiredError).matches(NAME_MATCH, nameError),\n  number: string()\n    .required(requiredError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      nameNumber\n    ),\n});\n","import { AiOutlineUserAdd } from 'react-icons/ai';\n\nconst AddContactIcon = () => {\n  return <AiOutlineUserAdd size={25} fill=\"white\" />;\n};\n\nexport default AddContactIcon;\n","import { Formik, ErrorMessage } from 'formik';\nimport { Notify } from 'notiflix';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport { Form, Input, Label } from './ContactForm.styled';\nimport { AddButton } from 'components/Button/Button.styled';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\nimport { NAME_MATCH, SignupSchema } from 'constants/constants';\nimport AddContactIcon from 'components/Icons/AddContactIcon';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage name={name} render={message => Notify.failure(message)} />\n  );\n};\n\nconst ContactForm = () => {\n  const [addContact, { isLoading: isPosting }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const name = e.target.name.value;\n      const number = e.target.number.value;\n      const contactsName = contacts.find(contact => contact.name === name);\n      const contactsNumber = contacts.find(\n        contact => contact.number === number\n      );\n      const contact = { name, number };\n\n      if (contactsName) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${name} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      if (contactsNumber) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${number} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      await addContact(contact);\n      toast.success('Contact added successfully!');\n      e.target.reset();\n    } catch (error) {\n      console.log(error);\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern={NAME_MATCH}\n          placeholder=\"Name\"\n          required\n        />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Number\"\n          required\n        />\n        <FormError name=\"number\" />\n        <AddButton type=\"submit\">\n          {isPosting ? (\n            <Loader />\n          ) : (\n            <>\n              <AddContactIcon />\n              <p>Add Contact</p>\n            </>\n          )}\n        </AddButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(280px, 1fr));\n  grid-template-rows: auto;\n  gap: ${p => p.theme.space[4]}px;\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n  justify-content: space-between;\n`;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const Line = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const ButtonsDiv = styled.div`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n`;\n","export const getShowModal = state => state.modal.showModal;\nexport const getContactName = state => state.modal.name;\nexport const getContactNumber = state => state.modal.number;\nexport const getContactid = state => state.modal.id;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: ${p => p.theme.position.fixed};\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.modalBg};\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  position: ${p => p.theme.position.relative};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.sm};\n  width: 600px;\n  height: 300px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: ${p => p.theme.space[4]}px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-left: ${p => p.theme.space[9]};\n  margin-right: ${p => p.theme.space[9]};\n`;\n\nexport const Label = styled.label`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[3]}px;\n  outline: orange;\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.space[3]}px;\n  :focus {\n    border: ${p => p.theme.borders.bold};\n  }\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\n\nimport { NAME_MATCH, SignupSchema } from 'constants/constants';\nimport { FormError } from 'components/ContactForm/ContactForm';\nimport { Form, Input, Label } from './ModalForm.styled';\nimport Loader from 'components/Loader';\nimport { EditButton } from 'components/Button/Button.styled';\nimport {\n  getContactName,\n  getContactNumber,\n  getContactid,\n} from 'redux/modal/modalSelectors';\n\nconst ModalForm = ({ onSubmit, isUpdaiting }) => {\n  const name = useSelector(getContactName);\n  const number = useSelector(getContactNumber);\n  const id = useSelector(getContactid);\n\n  const handleSubmit = async ({ name, number }, actions) => {\n    await onSubmit({ name, number, id });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name,\n        number,\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <Form>\n          <Label htmlFor=\"contactName\">Name</Label>\n          <Input\n            id=\"contactName\"\n            type=\"text\"\n            name=\"name\"\n            pattern={NAME_MATCH}\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor=\"phone\">Number</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n            required\n          />\n          <FormError name=\"number\" />\n          <EditButton\n            type=\"submit\"\n            disabled={values.name === name && values.number === number}\n          >\n            {isUpdaiting ? <Loader /> : 'Edit'}\n          </EditButton>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ModalForm;\n","import { CloseButton } from 'components/Button/Button.styled';\nimport Modal from 'components/Modal/Modal';\nimport ModalForm from 'components/ModalForm/ModalForm';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useUpdateContactMutation } from 'redux/contactsSlice';\nimport { showModalChange } from 'redux/modal/modalSlice';\n\nconst ContactEditorModal = ({ handleShowModal }) => {\n  const [updateContact, { isLoading: isUpdaiting }] =\n    useUpdateContactMutation();\n  const dispatch = useDispatch();\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact(fields);\n      dispatch(showModalChange());\n      toast.success('Contact edited successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n  return (\n    <>\n      <Modal onClose={handleShowModal}>\n        <CloseButton onClick={handleShowModal}>\n          <AiOutlineCloseCircle size={20} />\n        </CloseButton>\n        <ModalForm onSubmit={handleUpdateContact} isUpdaiting={isUpdaiting} />\n      </Modal>\n    </>\n  );\n};\n\nexport default ContactEditorModal;\n","import { DeleteIconStyled } from './Icons.styled';\n\nconst DeleteIcon = () => {\n  return <DeleteIconStyled size={20} />;\n};\n\nexport default DeleteIcon;\n","import { EditIconStyled } from './Icons.styled';\n\nconst EditIcon = () => {\n  return <EditIconStyled size={20} />;\n};\n\nexport default EditIcon;\n","import { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonsDiv, Line } from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport Loader from 'components/Loader';\nimport { showModalChange } from 'redux/modal/modalSlice';\nimport { getShowModal } from 'redux/modal/modalSelectors';\nimport ContactEditorModal from 'components/ContactEditorModal/ContactEditorModal';\nimport { ListItemBlockButton } from 'components/Button/Button.styled';\nimport DeletIcon from 'components/Icons/DeleteIcon';\nimport EditIcon from 'components/Icons/EditIcon';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const showModal = useSelector(getShowModal);\n  const dispatch = useDispatch();\n\n  const handleShowModal = () => {\n    dispatch(showModalChange({ name, number, id }));\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <>\n      <Line>\n        {name}: <span>{number}</span>\n      </Line>\n      <ButtonsDiv>\n        <ListItemBlockButton onClick={handleShowModal}>\n          <EditIcon />\n        </ListItemBlockButton>\n        <ListItemBlockButton onClick={handleDelete} disabled={isDeleting}>\n          {isDeleting ? <Loader size={8} /> : <DeletIcon />}\n        </ListItemBlockButton>\n      </ButtonsDiv>\n      {showModal && <ContactEditorModal handleShowModal={handleShowModal} />}\n    </>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { List, ListItem } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { getFilterValue } from 'redux/filterSlice';\n\nconst ContactList = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useSelector(getFilterValue);\n\n  const createFilter = () => {\n    const normalizedFilterValue = filter.toLocaleLowerCase();\n    if (contacts) {\n      const filteredContacts = contacts.filter(\n        contact =>\n          contact.name.toLocaleLowerCase().includes(normalizedFilterValue) ||\n          contact.number.toString().includes(normalizedFilterValue)\n      );\n      return filteredContacts;\n    }\n  };\n\n  const filteredContacts = createFilter();\n\n  if (filteredContacts) {\n    return (\n      <List>\n        {filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ListItem key={id} name={name}>\n              <ContactListItem name={name} number={number} id={id} />\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 40px;\n  border-radius: 8px;\n  border: none;\n  margin-left: 70px;\n  padding: 10px;\n  :focus {\n    outline: 1px solid blue;\n  }\n`;\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts, getFilterValue } from 'redux/filterSlice';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const searchFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={searchFilter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Title, Section, PhonebookTitle } from '../App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Container } from 'pages/Home/Home.styled';\n\nconst PhonebookSection = () => {\n  return (\n    <>\n      <Container>\n        <div>\n          <Title>Phonebook</Title>\n          <ContactForm />\n        </div>\n      </Container>\n      <Section>\n        <PhonebookTitle>Contacts</PhonebookTitle>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default PhonebookSection;\n","import Loader from 'components/Loader';\nimport PhonebookSection from 'components/PhonebookSection';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const { data: contacts, refetch } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      refetch();\n    }\n  }, [isLoggedIn, refetch]);\n\n  return contacts ? <PhonebookSection /> : <Loader size={50} />;\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: ${p => p.theme.space[0]}px ${p => p.theme.space[4]}px;\n`;\n\nexport const HomeTitle = styled.h1`\n  padding-top: ${p => p.theme.space[4]}px;\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.l};\n  margin-left: ${p => p.theme.space[9]};\n  margin-right: ${p => p.theme.space[9]};\n  align-item: center;\n`;\n\nexport const HomeLink = styled(Link)`\n  color: ${p => p.theme.colors.orangered};\n  transition: ${p => p.theme.transition.color};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.white};\n  }\n`;\n"],"names":["Form","styled","Label","Input","NAME_MATCH","requiredError","SignupSchema","object","shape","name","string","required","matches","number","size","fill","FormError","render","message","Notify","useAddContactMutation","addContact","isPosting","isLoading","contacts","useGetContactsQuery","data","handleSubmit","e","preventDefault","target","value","contactsName","find","contact","contactsNumber","Swal","title","text","icon","confirmButtonText","toast","reset","console","log","initialValues","validationSchema","onSubmit","htmlFor","id","type","pattern","placeholder","Loader","List","p","theme","space","ListItem","Line","ButtonsDiv","getShowModal","state","modal","showModal","getContactName","getContactNumber","getContactid","Overlay","position","fixed","colors","modalBg","ModalWindow","relative","white","radii","sm","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","fontSizes","m","borders","normal","bold","isUpdaiting","useSelector","actions","values","autoComplete","disabled","handleShowModal","useUpdateContactMutation","updateContact","dispatch","useDispatch","handleUpdateContact","fields","showModalChange","useDeleteContactMutation","deleteContact","isDeleting","handleDelete","filter","getFilterValue","filteredContacts","normalizedFilterValue","toLocaleLowerCase","includes","toString","createFilter","sort","firstName","secondName","localeCompare","map","onChange","filterContacts","isLoggedIn","authSelectors","refetch","Container","HomeTitle","l","HomeLink","Link","orangered","transition","color"],"sourceRoot":""}