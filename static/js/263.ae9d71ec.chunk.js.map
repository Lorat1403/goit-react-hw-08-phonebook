{"version":3,"file":"static/js/263.ae9d71ec.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","constants/constants.js","components/Icons/AddContactIcon.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","redux/modal/modalSelectors.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactEditorModal/ContactEditorModal.jsx","components/Icons/DeleteIcon.jsx","components/Icons/EditIcon.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/PhonebookSection/PhonebookSection.jsx","pages/Contacts/Contacts.jsx","pages/Home/Home.styled.js"],"sourcesContent":["// import styled from '@emotion/styled';\nimport styled from 'styled-components';\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  background-color: pink;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  height: 35px;\n  width: 200px;\n\n  border-radius: 8px;\n  ${'' /* background-color: #45f5e6; */}\n  border: none;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: violet;\n    transform: scale(1.1);\n  }\n`;\n","import { object, string } from 'yup';\n\nexport const NAME_MATCH =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nexport const nameError =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const nameNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nexport const requiredError = 'This field is required';\nexport const SignupSchema = object().shape({\n  name: string().required(requiredError).matches(NAME_MATCH, nameError),\n  number: string()\n    .required(requiredError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      nameNumber\n    ),\n});\n","import { AiOutlineUserAdd } from 'react-icons/ai';\n\nconst AddContactIcon = () => {\n  return <AiOutlineUserAdd size={25} fill=\"white\" />;\n};\n\nexport default AddContactIcon;\n","import { Formik, ErrorMessage } from 'formik';\nimport { Notify } from 'notiflix';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport { Form, Input, Label } from './ContactForm.styled';\nimport { AddButton } from 'components/Button/Button.styled';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\nimport { NAME_MATCH, SignupSchema } from 'constants/constants';\nimport AddContactIcon from 'components/Icons/AddContactIcon';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage name={name} render={message => Notify.failure(message)} />\n  );\n};\n\nconst ContactForm = () => {\n  const [addContact, { isLoading: isPosting }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const name = e.target.name.value;\n      const number = e.target.number.value;\n      const contactsName = contacts.find(contact => contact.name === name);\n      const contactsNumber = contacts.find(\n        contact => contact.number === number\n      );\n      const contact = { name, number };\n\n      if (contactsName) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${name} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      if (contactsNumber) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${number} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      await addContact(contact);\n      toast.success('Contact added successfully!');\n      e.target.reset();\n    } catch (error) {\n      console.log(error);\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern={NAME_MATCH}\n          placeholder=\"Name\"\n          required\n        />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Number\"\n          required\n        />\n        <FormError name=\"number\" />\n        <AddButton type=\"submit\">\n          {isPosting ? (\n            <Loader />\n          ) : (\n            <>\n              <AddContactIcon />\n              <p>Add Contact</p>\n            </>\n          )}\n        </AddButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(280px, 1fr));\n  grid-template-rows: auto;\n  gap: ${p => p.theme.space[4]}px;\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n  justify-content: space-between;\n`;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const Line = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const ButtonsDiv = styled.div`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n`;\n","export const getShowModal = state => state.modal.showModal;\nexport const getContactName = state => state.modal.name;\nexport const getContactNumber = state => state.modal.number;\nexport const getContactid = state => state.modal.id;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: ${p => p.theme.position.fixed};\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.modalBg};\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  position: ${p => p.theme.position.relative};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.sm};\n  width: 600px;\n  height: 300px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// import styled from '@emotion/styled';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: ${p => p.theme.space[4]}px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-left: ${p => p.theme.space[9]};\n  margin-right: ${p => p.theme.space[9]};\n`;\n\nexport const Label = styled.label`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[3]}px;\n  outline: orange;\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.space[3]}px;\n  :focus {\n    border: ${p => p.theme.borders.bold};\n  }\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\n\nimport { NAME_MATCH, SignupSchema } from 'constants/constants';\nimport { FormError } from 'components/ContactForm/ContactForm';\nimport { Form, Input, Label } from './ModalForm.styled';\nimport Loader from 'components/Loader';\nimport { EditButton } from 'components/Button/Button.styled';\nimport {\n  getContactName,\n  getContactNumber,\n  getContactid,\n} from 'redux/modal/modalSelectors';\n\nconst ModalForm = ({ onSubmit, isUpdaiting }) => {\n  const name = useSelector(getContactName);\n  const number = useSelector(getContactNumber);\n  const id = useSelector(getContactid);\n\n  const handleSubmit = async ({ name, number }, actions) => {\n    await onSubmit({ name, number, id });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name,\n        number,\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <Form>\n          <Label htmlFor=\"contactName\">Name</Label>\n          <Input\n            id=\"contactName\"\n            type=\"text\"\n            name=\"name\"\n            pattern={NAME_MATCH}\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor=\"phone\">Number</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n            required\n          />\n          <FormError name=\"number\" />\n          <EditButton\n            type=\"submit\"\n            disabled={values.name === name && values.number === number}\n          >\n            {isUpdaiting ? <Loader /> : 'Edit'}\n          </EditButton>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ModalForm;\n","import { CloseButton } from 'components/Button/Button.styled';\nimport Modal from 'components/Modal/Modal';\nimport ModalForm from 'components/ModalForm/ModalForm';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useUpdateContactMutation } from 'redux/contactsSlice';\nimport { showModalChange } from 'redux/modal/modalSlice';\n\nconst ContactEditorModal = ({ handleShowModal }) => {\n  const [updateContact, { isLoading: isUpdaiting }] =\n    useUpdateContactMutation();\n  const dispatch = useDispatch();\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact(fields);\n      dispatch(showModalChange());\n      toast.success('Contact edited successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n  return (\n    <>\n      <Modal onClose={handleShowModal}>\n        <CloseButton onClick={handleShowModal}>\n          <AiOutlineCloseCircle size={20} />\n        </CloseButton>\n        <ModalForm onSubmit={handleUpdateContact} isUpdaiting={isUpdaiting} />\n      </Modal>\n    </>\n  );\n};\n\nexport default ContactEditorModal;\n","import { DeleteIconStyled } from './Icons.styled';\n\nconst DeleteIcon = () => {\n  return <DeleteIconStyled size={20} />;\n};\n\nexport default DeleteIcon;\n","import { EditIconStyled } from './Icons.styled';\n\nconst EditIcon = () => {\n  return <EditIconStyled size={20} />;\n};\n\nexport default EditIcon;\n","import { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonsDiv, Line } from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport Loader from 'components/Loader';\nimport { showModalChange } from 'redux/modal/modalSlice';\nimport { getShowModal } from 'redux/modal/modalSelectors';\nimport ContactEditorModal from 'components/ContactEditorModal/ContactEditorModal';\nimport { ListItemBlockButton } from 'components/Button/Button.styled';\nimport DeletIcon from 'components/Icons/DeleteIcon';\nimport EditIcon from 'components/Icons/EditIcon';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const showModal = useSelector(getShowModal);\n  const dispatch = useDispatch();\n\n  const handleShowModal = () => {\n    dispatch(showModalChange({ name, number, id }));\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <>\n      <Line>\n        {name}: <span>{number}</span>\n      </Line>\n      <ButtonsDiv>\n        <ListItemBlockButton onClick={handleShowModal}>\n          <EditIcon />\n        </ListItemBlockButton>\n        <ListItemBlockButton onClick={handleDelete} disabled={isDeleting}>\n          {isDeleting ? <Loader size={8} /> : <DeletIcon />}\n        </ListItemBlockButton>\n      </ButtonsDiv>\n      {showModal && <ContactEditorModal handleShowModal={handleShowModal} />}\n    </>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { List, ListItem } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { getFilterValue } from 'redux/filterSlice';\n\nconst ContactList = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useSelector(getFilterValue);\n\n  const createFilter = () => {\n    const normalizedFilterValue = filter.toLocaleLowerCase();\n    if (contacts) {\n      const filteredContacts = contacts.filter(\n        contact =>\n          contact.name.toLocaleLowerCase().includes(normalizedFilterValue) ||\n          contact.number.toString().includes(normalizedFilterValue)\n      );\n      return filteredContacts;\n    }\n  };\n\n  const filteredContacts = createFilter();\n\n  if (filteredContacts) {\n    return (\n      <List>\n        {filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ListItem key={id} name={name}>\n              <ContactListItem name={name} number={number} id={id} />\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 40px;\n  border-radius: 8px;\n  border: none;\n  margin-left: 70px;\n  padding: 10px;\n  :focus {\n    outline: 1px solid blue;\n  }\n`;\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts, getFilterValue } from 'redux/filterSlice';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const searchFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={searchFilter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Title, Section, PhonebookTitle } from '../App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Container } from 'pages/Home/Home.styled';\n\nconst PhonebookSection = () => {\n  return (\n    <>\n      <Container>\n        <div>\n          <Title>Phonebook</Title>\n          <ContactForm />\n        </div>\n      </Container>\n      <Section>\n        <PhonebookTitle>Contacts</PhonebookTitle>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default PhonebookSection;\n","import Loader from 'components/Loader';\nimport PhonebookSection from 'components/PhonebookSection';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const { data: contacts, refetch } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      refetch();\n    }\n  }, [isLoggedIn, refetch]);\n\n  return contacts ? <PhonebookSection /> : <Loader size={50} />;\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: ${p => p.theme.space[0]}px ${p => p.theme.space[4]}px;\n`;\n\nexport const HomeTitle = styled.h1`\n  padding-top: ${p => p.theme.space[6]}px;\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.l};\n  margin-left: ${p => p.theme.space[9]};\n  margin-right: ${p => p.theme.space[9]};\n  align-item: center;\n`;\n\nexport const HomeLink = styled(Link)`\n  color: ${p => p.theme.colors.orangered};\n  transition: ${p => p.theme.transition.color};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.white};\n  }\n`;\n"],"names":["Form","styled","form","Label","label","Input","input","button","NAME_MATCH","requiredError","SignupSchema","object","shape","name","string","required","matches","number","AddContactIcon","_jsx","AiOutlineUserAdd","size","fill","FormError","_ref","ErrorMessage","render","message","Notify","failure","ContactForm","addContact","isLoading","isPosting","useAddContactMutation","data","contacts","useGetContactsQuery","Formik","initialValues","validationSchema","children","_jsxs","onSubmit","async","e","preventDefault","target","value","contactsName","find","contact","contactsNumber","Swal","title","text","icon","confirmButtonText","toast","success","reset","error","console","log","htmlFor","id","type","pattern","placeholder","AddButton","Loader","_Fragment","List","ul","p","theme","space","ListItem","li","Line","ButtonsDiv","div","getShowModal","state","modal","showModal","getContactName","getContactNumber","getContactid","Overlay","position","fixed","colors","modalBg","ModalWindow","relative","white","radii","sm","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","fontSizes","m","borders","normal","bold","isUpdaiting","useSelector","_ref2","actions","_ref3","values","autoComplete","EditButton","disabled","handleShowModal","updateContact","useUpdateContactMutation","dispatch","useDispatch","Modal","CloseButton","AiOutlineCloseCircle","ModalForm","fields","showModalChange","DeleteIcon","DeleteIconStyled","EditIcon","EditIconStyled","deleteContact","isDeleting","useDeleteContactMutation","ListItemBlockButton","DeletIcon","ContactEditorModal","ContactList","filter","getFilterValue","filteredContacts","createFilter","normalizedFilterValue","toLocaleLowerCase","includes","toString","sort","firstName","secondName","localeCompare","map","ContactListItem","Filter","onChange","filterContacts","PhonebookSection","Container","Title","Section","PhonebookTitle","Contacts","isLoggedIn","authSelectors","getIsLoggedIn","refetch","HomeTitle","h1","l","HomeLink","Link","orangered","transition","color"],"sourceRoot":""}